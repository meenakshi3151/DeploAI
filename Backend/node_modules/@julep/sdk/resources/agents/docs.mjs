// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../resource.mjs";
import { isRequestOptions } from "../../core.mjs";
import { DocsOffsetPagination } from "../docs.mjs";
export class Docs extends APIResource {
    /**
     * Create Agent Doc
     */
    create(agentId, params, options) {
        const { connection_pool, ...body } = params;
        return this._client.post(`/agents/${agentId}/docs`, { query: { connection_pool }, body, ...options });
    }
    list(agentId, query = {}, options) {
        if (isRequestOptions(query)) {
            return this.list(agentId, {}, query);
        }
        return this._client.getAPIList(`/agents/${agentId}/docs`, DocsOffsetPagination, { query, ...options });
    }
    /**
     * Delete Agent Doc
     */
    delete(agentId, docId, options) {
        return this._client.delete(`/agents/${agentId}/docs/${docId}`, options);
    }
    /**
     * Searches for documents associated with a specific agent.
     *
     * Parameters: x_developer_id (UUID): The unique identifier of the developer
     * associated with the agent. search_params (TextOnlyDocSearchRequest |
     * VectorDocSearchRequest | HybridDocSearchRequest): The parameters for the search.
     * agent_id (UUID): The unique identifier of the agent associated with the
     * documents.
     *
     * Returns: DocSearchResponse: The search results.
     */
    search(agentId, params, options) {
        const { connection_pool, ...body } = params;
        return this._client.post(`/agents/${agentId}/search`, { query: { connection_pool }, body, ...options });
    }
}
export { DocsOffsetPagination };
//# sourceMappingURL=docs.mjs.map