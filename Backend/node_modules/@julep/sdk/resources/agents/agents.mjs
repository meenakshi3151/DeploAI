// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../resource.mjs";
import { isRequestOptions } from "../../core.mjs";
import * as DocsAPI from "./docs.mjs";
import { Docs } from "./docs.mjs";
import * as ToolsAPI from "./tools.mjs";
import { ToolListResponsesOffsetPagination, Tools, } from "./tools.mjs";
import { OffsetPagination } from "../../pagination.mjs";
export class Agents extends APIResource {
    constructor() {
        super(...arguments);
        this.tools = new ToolsAPI.Tools(this._client);
        this.docs = new DocsAPI.Docs(this._client);
    }
    /**
     * Create Agent
     */
    create(body, options) {
        return this._client.post('/agents', { body, ...options });
    }
    /**
     * Patch Agent
     */
    update(agentId, body, options) {
        return this._client.patch(`/agents/${agentId}`, { body, ...options });
    }
    list(query = {}, options) {
        if (isRequestOptions(query)) {
            return this.list({}, query);
        }
        return this._client.getAPIList('/agents', AgentsOffsetPagination, { query, ...options });
    }
    /**
     * Delete Agent
     */
    delete(agentId, options) {
        return this._client.delete(`/agents/${agentId}`, options);
    }
    /**
     * Create Or Update Agent
     */
    createOrUpdate(agentId, body, options) {
        return this._client.post(`/agents/${agentId}`, { body, ...options });
    }
    /**
     * Get Agent Details
     */
    get(agentId, options) {
        return this._client.get(`/agents/${agentId}`, options);
    }
    /**
     * Update Agent
     */
    reset(agentId, body, options) {
        return this._client.put(`/agents/${agentId}`, { body, ...options });
    }
}
export class AgentsOffsetPagination extends OffsetPagination {
}
Agents.AgentsOffsetPagination = AgentsOffsetPagination;
Agents.Tools = Tools;
Agents.ToolListResponsesOffsetPagination = ToolListResponsesOffsetPagination;
Agents.Docs = Docs;
//# sourceMappingURL=agents.mjs.map