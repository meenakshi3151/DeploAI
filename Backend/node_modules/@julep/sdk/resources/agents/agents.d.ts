import { APIResource } from "../../resource.js";
import * as Core from "../../core.js";
import * as Shared from "../shared.js";
import * as DocsAPI from "./docs.js";
import { DocCreateParams, DocListParams, DocSearchParams, DocSearchResponse, Docs } from "./docs.js";
import * as ToolsAPI from "./tools.js";
import { ToolCreateParams, ToolCreateResponse, ToolListParams, ToolListResponse, ToolListResponsesOffsetPagination, ToolResetParams, ToolResetResponse, ToolUpdateParams, ToolUpdateResponse, Tools } from "./tools.js";
import { OffsetPagination, type OffsetPaginationParams } from "../../pagination.js";
export declare class Agents extends APIResource {
    tools: ToolsAPI.Tools;
    docs: DocsAPI.Docs;
    /**
     * Create Agent
     */
    create(body: AgentCreateParams, options?: Core.RequestOptions): Core.APIPromise<Agent>;
    /**
     * Patch Agent
     */
    update(agentId: string, body: AgentUpdateParams, options?: Core.RequestOptions): Core.APIPromise<Agent>;
    /**
     * List Agents
     */
    list(query?: AgentListParams, options?: Core.RequestOptions): Core.PagePromise<AgentsOffsetPagination, Agent>;
    list(options?: Core.RequestOptions): Core.PagePromise<AgentsOffsetPagination, Agent>;
    /**
     * Delete Agent
     */
    delete(agentId: string, options?: Core.RequestOptions): Core.APIPromise<Shared.ResourceDeleted>;
    /**
     * Create Or Update Agent
     */
    createOrUpdate(agentId: string, body: AgentCreateOrUpdateParams, options?: Core.RequestOptions): Core.APIPromise<Agent>;
    /**
     * Get Agent Details
     */
    get(agentId: string, options?: Core.RequestOptions): Core.APIPromise<Agent>;
    /**
     * Update Agent
     */
    reset(agentId: string, body: AgentResetParams, options?: Core.RequestOptions): Core.APIPromise<Agent>;
}
export declare class AgentsOffsetPagination extends OffsetPagination<Agent> {
}
export interface Agent {
    id: string;
    created_at: string;
    name: string;
    updated_at: string;
    about?: string;
    canonical_name?: string | null;
    default_settings?: unknown | null;
    default_system_template?: string;
    instructions?: string | Array<string>;
    metadata?: unknown | null;
    model?: string;
}
export interface AgentCreateParams {
    name: string;
    about?: string;
    canonical_name?: string | null;
    default_settings?: unknown | null;
    default_system_template?: string;
    instructions?: string | Array<string>;
    metadata?: unknown | null;
    model?: string;
}
export interface AgentUpdateParams {
    about?: string;
    canonical_name?: string | null;
    default_settings?: unknown | null;
    default_system_template?: string;
    instructions?: string | Array<string>;
    metadata?: unknown | null;
    model?: string;
    name?: string | null;
}
export interface AgentListParams extends OffsetPaginationParams {
    direction?: 'asc' | 'desc';
    metadata_filter?: Record<string, unknown>;
    sort_by?: 'created_at' | 'updated_at';
}
export interface AgentCreateOrUpdateParams {
    name: string;
    about?: string;
    canonical_name?: string | null;
    default_settings?: unknown | null;
    default_system_template?: string;
    instructions?: string | Array<string>;
    metadata?: unknown | null;
    model?: string;
}
export interface AgentResetParams {
    name: string;
    about?: string;
    canonical_name?: string | null;
    default_settings?: unknown | null;
    default_system_template?: string;
    instructions?: string | Array<string>;
    metadata?: unknown | null;
    model?: string;
}
export declare namespace Agents {
    export { type Agent as Agent, AgentsOffsetPagination as AgentsOffsetPagination, type AgentCreateParams as AgentCreateParams, type AgentUpdateParams as AgentUpdateParams, type AgentListParams as AgentListParams, type AgentCreateOrUpdateParams as AgentCreateOrUpdateParams, type AgentResetParams as AgentResetParams, };
    export { Tools as Tools, type ToolCreateResponse as ToolCreateResponse, type ToolUpdateResponse as ToolUpdateResponse, type ToolListResponse as ToolListResponse, type ToolResetResponse as ToolResetResponse, ToolListResponsesOffsetPagination as ToolListResponsesOffsetPagination, type ToolCreateParams as ToolCreateParams, type ToolUpdateParams as ToolUpdateParams, type ToolListParams as ToolListParams, type ToolResetParams as ToolResetParams, };
    export { Docs as Docs, type DocSearchResponse as DocSearchResponse, type DocCreateParams as DocCreateParams, type DocListParams as DocListParams, type DocSearchParams as DocSearchParams, };
}
//# sourceMappingURL=agents.d.ts.map