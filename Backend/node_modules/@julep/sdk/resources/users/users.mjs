// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../resource.mjs";
import { isRequestOptions } from "../../core.mjs";
import * as DocsAPI from "./docs.mjs";
import { Docs } from "./docs.mjs";
import { OffsetPagination } from "../../pagination.mjs";
export class Users extends APIResource {
    constructor() {
        super(...arguments);
        this.docs = new DocsAPI.Docs(this._client);
    }
    /**
     * Create User
     */
    create(body, options) {
        return this._client.post('/users', { body, ...options });
    }
    /**
     * Patch User
     */
    update(userId, body, options) {
        return this._client.patch(`/users/${userId}`, { body, ...options });
    }
    list(query = {}, options) {
        if (isRequestOptions(query)) {
            return this.list({}, query);
        }
        return this._client.getAPIList('/users', UsersOffsetPagination, { query, ...options });
    }
    /**
     * Delete User
     */
    delete(userId, options) {
        return this._client.delete(`/users/${userId}`, options);
    }
    /**
     * Create Or Update User
     */
    createOrUpdate(userId, body, options) {
        return this._client.post(`/users/${userId}`, { body, ...options });
    }
    /**
     * Get User Details
     */
    get(userId, options) {
        return this._client.get(`/users/${userId}`, options);
    }
    /**
     * Update User
     */
    reset(userId, body, options) {
        return this._client.put(`/users/${userId}`, { body, ...options });
    }
}
export class UsersOffsetPagination extends OffsetPagination {
}
Users.UsersOffsetPagination = UsersOffsetPagination;
Users.Docs = Docs;
//# sourceMappingURL=users.mjs.map